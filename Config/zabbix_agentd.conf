# Общие параметры -------------------------------------------------------------

# Полное имя PID-файла(/tmp/zabbix_agentd.pid)
PidFile				= /var/run/zabbix/zabbix_agentd.pid

### Тип журналирования:	system - syslog, file - файл из параметра LogFile,
# console - стандартный вывод(file)
LogType				= system
### Полное имя файла журнала при 'LogType=file'()
#LogFile			= /var/log/zabbix/zabbix_agentd.log
### Максимальный размер файла журнала 0-1024 в Мб; 0 - выключение ротации(1)
#LogFileSize			= 0
# Уровень отладки журнала: 0 - отсутствует, 1 - критические, 2 - ошибки,
# 3 - предупреждения, 4 - отладка, 5 - расширенная отладка(3)
#DebugLevel			= 3

### IP-адрес источника исходящих соединений()
SourceIP			= IP.адрес.zabbix.агента

# Разрешение удаленных команд с Zabbix-сервера(0)
#EnableRemoteCommands		= 0
# Журналирование исполняемых команд оболочки как предупреждений(0)
#LogRemoteCommands		= 0


# Пассивные проверки ----------------------------------------------------------

### Список через запятую принимаемых для входящих соединений IP-адресов/имен
# Zabbix-серверов()
Server				= IP.адрес.zabbix.сервера
# Прослушиваемый порт 1024-32767(10050)
#ListenPort			= 10050
### Список через запятую прослушиваемых IP-адресов; первый посылается серверу
# при получении списка активных проверок(0.0.0.0)
ListenIP			= IP.адрес.zabbix.агента
# Количество экземпляров агента для пассивных проверок 0-100; 0 - выключение
# пассивных проверок и прослушивания TCP-порта(3)
#StartAgents			= 3


# Активные проверки -----------------------------------------------------------

### Список через запятую IP-адрес/имя:порт серверов для активных проверок;
# порт не задан - умалчиваемый; не задан - выключение активных проверок()
ServerActive			= IP.адрес.zabbix.сервера
### Уникальное регистрозависимое имя компьютера; не задано - HostnameItem()
#Hostname			=
# Сгенерированное имя при неопределенном Hostname(system.hostname)
#HostnameItem			= system.hostname
# Метаданные хоста до 255 символов для авторегистрации; не задано - HostMetadataItem()
#HostMetadata			=
# Элемент для получения метаданных хоста до 255 символов для авторегистрации
# при незаданном HostMetadata()
#HostMetadataItem		=

# Период обновления списка активных проверок в секундах 60-3600(120)
#RefreshActiveChecks		= 120
# Время хранения данных в буфере в секундах 1-3600(5)
#BufferSend			= 5
# Максимальное количество значений в буфере; по его заполнении - отправка данных
# серверу/прокси 2-65535(100)
#BufferSize			= 100
# Максимальное количество строк в секунду посылаемых серверу/прокси активными
# проверками 'log' и 'logrt'; переопределяет параметр 'maxlines' 1-1000(20)
#MaxLinesPerSecond		= 20


# Расширенные параметры -------------------------------------------------------

# Псевдоним параметра
#Alias

### Таймаут обработки в секундах 1-30(3)
Timeout				= 10

# Разрешение запуска агента под 'root'; запрещен и агент запущен под 'root' -
# агент пытается переключиться на пользователя User(0)
#AllowRoot			= 0
# Пользователь, с привилегиями которого работает сервис при AllowRoot=0
#User				= zabbix

# Включение файлов/каталогов в конфигурацию()
#Include			=


# Определяемые пользователем параметры ----------------------------------------

# Разрешение всех символов в аргументах для передачи определенных пользователем
# параметров; запрещены символы \'"`*?[]{}~$!&;()<>|#@ и newline(0)
#UnsafeUserParameters		= 0
### Определенные пользователем параметры для мониторинга; формат:
#  UserParameter=<ключ>,<команда оболочки>
# Apache
#UserParameter			= apache_status,/etc/zabbix/apache_stat.sh
# Asterisk
#UserParameter			= asterisk_status,/etc/zabbix/asterisk_stat.sh
# Elasticsearch
#UserParameter			= elasticsearch_status,/etc/zabbix/elasticsearch_stat.sh
# IO
#UserParameter			= iostat_status,/etc/zabbix/io_stat.sh
#UserParameter			= iostat.discovery_disks,/etc/zabbix/io_stat.sh disks
# MongoDB
#UserParameter			= mongodb_status,/etc/zabbix/mongodb_stat.sh
#UserParameter			= mongodb.discovery_db,/etc/zabbix/mongodb_stat.sh db
# MySQL
#UserParameter			= mysql_status,/etc/zabbix/mysql_stat.sh
# MySQL Slave
#UserParameter			= mysql_slave_status,/etc/zabbix/mysql_slave_stat.sh
# Nginx
#UserParameter			= nginx_status,/etc/zabbix/nginx_stat.sh
# Oracle
#UserParameter			= oracle_status[*],/etc/zabbix/oracle_stat.sh $1
#UserParameter			= oracle.discovery_databases,/etc/zabbix/oracle_stat.sh
#UserParameter			= oracle.discovery_tablespaces,/etc/zabbix/oracle_stat.sh tablespaces
# Php-fpm
#UserParameter			= php-fpm_status,/etc/zabbix/php-fpm_stat.sh
# Postfix
#UserParameter			= postfix_status,/etc/zabbix/postfix_stat.sh
# RabbitMQ
#UserParameter			= rabbitmq_status,/etc/zabbix/rabbitmq_stat.sh
#UserParameter			= rabbitmq.discovery_queues,/etc/zabbix/rabbitmq_stat.sh queues
# Redis
#UserParameter			= redis_status,/etc/zabbix/redis_stat.sh
#UserParameter			= redis.discovery_db,/etc/zabbix/redis_stat.sh db
# Sphinx
#UserParameter			= sphinx_status,/etc/zabbix/sphinx_stat.sh
#UserParameter			= sphinx.discovery_indexes,/etc/zabbix/sphinx_stat.sh indexes


# Загружаемые модули ----------------------------------------------------------

# Полный путь к модулям агента(опции компиляции)
#LoadModulePath			= ${libdir}/modules
# Загружаемые из каталога LoadModulePath при запуске агента модули; формат:
#  LoadModule=<модуль.so>
#LoadModule			=


# TLS параметры ---------------------------------------------------------------

# Подключение агента к серверу/прокси при активных проверках(unencrypted):
# unencrypted - без шифрования, psk - TLS предварительный общий ключ,
# cert - TLS сертификат
#TLSConnect			= unencrypted
# Входящие соединения(unencrypted):
# unencrypted - без шифрования, psk - TLS предварительный общий ключ,
# cert - TLS сертификат
#TLSAccept			= unencrypted
# Полное имя файла сертификатов CA()
#TLSCAFile			=
# Полное имя файла отозванных сертификатов()
#TLSCRLFile			=
# Разрешенный эмитент сертификата сервера()
#TLSServerCertIssuer		=
# Разрешенный субъект сертификата сервера()
#TLSServerCertSubject		=
# Полное имя файла сертификата агента или цепочки сертификатов()
#TLSCertFile			=
# Полное имя файла приватного ключа агента()
#TLSKeyFile			=
# Регистрозависимая строка предварительного общего ключа()
#TLSPSKIdentity			=
# Полное имя файла предварительного общего ключа()
#TLSPSKFile			=
